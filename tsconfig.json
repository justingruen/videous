// {
//   "compilerOptions": {
//     "target": "es5",
//     "lib": [
//       "dom",
//       "dom.iterable",
//       "esnext"
//     ],
//     "allowJs": true,
//     "skipLibCheck": true,
//     "strict": false,
//     "forceConsistentCasingInFileNames": true,
//     "downlevelIteration": true, // Original _error.tsx didnt fix "RangeError: Invalid array length", but this seems to work
//     "noEmit": true,
//     "esModuleInterop": true,
//     "module": "esnext",
//     "moduleResolution": "node",
//     "resolveJsonModule": true,
//     "isolatedModules": true,
//     "jsx": "preserve"
//   },
//   "include": [
//     "next-env.d.ts",
//     "**/*.ts",
//     "**/*.tsx"
//   ],
//   "exclude": [
//     "node_modules"
//   ]
// }

// tsconfig.json
{
  "compilerOptions": {
    "module": "commonjs",
    "esModuleInterop": true,
    "target": "es6",
    "noImplicitAny": true,
    "moduleResolution": "node",
    "sourceMap": true,
    "outDir": "dist",
    "baseUrl": ".",
    "paths": {
      "*": [
        "node_modules/",
        "src/types/*"
      ]
    },
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "noImplicitThis": true,
    "strictNullChecks": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    // "types": ["material-ui"]
  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules"
  ]
}
